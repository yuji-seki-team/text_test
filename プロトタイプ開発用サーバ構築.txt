

vagrant box add centos65 C:\Users\Latitude\Documents\CentOS-6.5-x86_64-v20140504.box

vagrant init centos65

vagrant sandbox on
-----------------------------


Joruri maps のドキュメントに従ってインストール

terminal
-----------------------
su

yum -y install wget make gcc-c++ httpd httpd-devel \
mysql-server mysql-devel libjpeg-devel libpng-devel \
ImageMagick ImageMagick-devel curl-devel \
libevent libevent-devel \
cairo cairo-devel openssl-devel

★openladp 関連だけ除いた

------------------------------------
Vagrantfile

config.vm.network "forwarded_port", guest: 80, host: 8080

vagrant reload

-------------------------------------
su

vi /etc/httpd/conf/httpd.conf

ServerName 192.168.0.101

/sbin/service httpd configtest
/sbin/chkconfig httpd on
service httpd start


service iptables stop
chkconfig iptables off

ブラウザで確認
http://localhost:8081

Mapserver

yum install -y curl-devel  libxml2-devel

cd /usr/local/src
wget http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
wget http://rpms.famillecollet.com/enterprise/remi-release-6.rpm

rpm -Uvh remi-release-6.rpm epel-release-6-8.noarch.rpm
yum info php --enablerepo=remi
yum info mysql --enablerepo=remi
yum install -y php php-adodb php-cli php-common php-devel php-gd php-imap php-ldap mysql-server mysql-devel --enablerepo=remi

rpm -qa | grep php | sort
rpm -qa | grep mysql | sort


yum -y install gd gd-devel
yum -y install giflib giflib-devel
yum -y install libpng libpng-devel
yum -y install libjpeg libjpeg-devel


wget http://download.osgeo.org/geos/geos-3.3.2.tar.bz2
tar jxvf geos-3.3.2.tar.bz2
cd geos-3.3.2
make && make install
/sbin/ldconfig -v


wget http://download.osgeo.org/proj/proj-4.8.0.tar.gz
tar zxvf proj-4.8.0.tar.gz
cd proj-4.8.0
make && make install
/sbin/ldconfig -v

yum install  --skip-broken  -- 'python*' -python3-queuelib -python-django-federated-login -python-twitter -python-libturpial

yum -y install curl curl-devel unixODBC unixODBC-devel

cd /usr/local/src
wget http://download.osgeo.org/gdal/gdal-1.9.0.tar.gz
tar zxvf gdal-1.9.0.tar.gz
cd gdal-1.9.0
./configure --with-libtiff=internal --with-pg --with-pymoddir=/usr/lib/python2.6/site-packages --with-python --with-xerces=/usr/local/ --with-odbc --with-geos=/usr/local/bin/geos-config
make && make install

rpm -ivh http://yum.postgresql.org/9.1/redhat/rhel-6-x86_64/pgdg-centos91-9.1-4.noarch.rpm
yum list | grep postgresql91
yum -y install postgresql91-server postgresql91-devel
service postgresql-9.1 initdb
/etc/init.d/postgresql-9.1 start

cd /usr/local/src
wget http://postgis.refractions.net/download/postgis-2.0.1.tar.gz
tar zxvf postgis-2.0.1.tar.gz
cd postgis-2.0.1
./configure --with-geos=/usr/local/bin/geos-config --with-pgconfig=/usr/pgsql-9.1/bin/pg_config --with-proj=/usr/local --with-proj-libdir=/usr/local/lib
make && make install


cd /usr/local/src
wget http://download.osgeo.org/mapserver/mapserver-6.0.4.tar.gz
tar zxvf mapserver-6.0.4.tar.gz
cd mapserver-6.0.4

./configure --with-tiff --with-zlib --with-jpeg --with-cairo --with-freetype --with-gd --with-geos --with-postgis=/usr/pgsql-9.1/bin/pg_config --with-proj --with-sos --with-threads --with-wcs --with-wfs --with-kml --with-wfsclient --with-wmsclient --with-wmsserver --with-gdal=/usr/local/bin/gdal-config --with-ogr=/usr/local/bin/gdal-config --with-agg --with-php=/usr/include/php --with-httpd=/usr/sbin/httpd

make

cp legend mapserv mapserver-config msencrypt scalebar shp2img shp2mysql.pl shptree shptreetst shptreevis sortshp tile4ms /usr/local/bin

下記エラー対策のため、以下を
#/usr/local/bin/mapserv: error while loading shared libraries: libproj.so.0: cannot open shared object file: No such file or directory

echo '/usr/local/lib' > /etc/ld.so.conf.d/mapserver.conf
/sbin/ldconfig -v

/usr/local/bin/mapserv -v
cp ./mapserv /var/www/cgi-bin/


chkconfig postgresql-9.1 on
service  postgresql-9.1 start

#postgis
su - postgres
createdb template_postgis -E UTF-8
psql template_postgis -f /usr/pgsql-9.1/share/contrib/postgis-2.0/postgis.sql
psql template_postgis -f /usr/pgsql-9.1/share/contrib/postgis-2.0/spatial_ref_sys.sql
createdb -T template_postgis sns_proto1
createuser pg
Shall the new role be a superuser? (y/n) 
y
createuser vagrant
Shall the new role be a superuser? (y/n) 
y
psql sns_proto1
select * from sns_proto1
\q
exit

#suExecの無効
cp -a /usr/sbin/suexec /usr/sbin/_suexec 
rm -rf /usr/sbin/suexec

#httpd.confの編集
<Directory "/var/www/icons">
    Options Indexes MultiViews FollowSymLinks
    AllowOverride None
    Order deny,allow
    Allow from all
    Satisfy any
</Directory>
<Directory "/var/www/cgi-bin">
    AllowOverride None
    Options None
    Order deny,allow
    Allow from all
    Satisfy any
</Directory>

#マップファイル設置ディレクトリを作成
/var/share/
mkdir /var/share/gis_mapfiles/

#シンボリックリンクを作成
ln -s /var/share/gis_mapfiles gis_mapfiles


# rbenv
# https://github.com/rbenv/rbenv
# http://www.task-notes.com/entry/20150624/1435114800


(vagrant sandbox commit)


ここから

一般ユーザーで

echo 'export PATH="$HOME/.rbenv/bin:${PATH}"' >> ~/.bash_profile
echo 'eval "$(rbenv init -)"' >> ~/.bash_profile
echo 'export PATH="./vendor/bin:${PATH}"' >> ~/.bash_profile
source .bash_profile

git clone https://github.com/rbenv/rbenv.git ~/.rbenv
git clone git://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build
git clone git://github.com/ianheggie/rbenv-binstubs.git ~/.rbenv/plugins/rbenv-binstubs
git clone git://github.com/rbenv/rbenv-gem-rehash.git ~/.rbenv/plugins/rbenv-gem-rehash



# すべてのrails バージョン
# https://rubygems.org/gems/rails/versions
rbenv install 2.0.0-p648
rbenv global 2.0.0-p648
rbenv versions


# Gem
# http://blog.tokoyax.com/entry/ruby/bundler など参考
#
# 以下は共通(global)

gem install bundler
gem install json -v '1.8.3'
gem install thread_safe -v '0.3.5'

# プロジェクト毎にbundlerでrailsを入れる
# ここから一般ユーザ
exit

#postgres
設定ファイル２つを編集


★pg ユーザー確認

------------
cd ce1/
bundle init
cat Gemfile
# 下記編集
# frozen_string_literal: true
# A sample Gemfile
source "https://rubygems.org"

gem 'rails', '3.2.11'

# Bundle edge Rails instead:
# gem 'rails', :git => 'git://github.com/rails/rails.git'

gem 'sqlite3'
gem 'jquery-rails'

# Gems used only for assets and not required
# in production environments by default.
group :assets do
  gem 'sass-rails',   '~> 3.2.3'
  gem 'coffee-rails', '~> 3.2.1'

  # See https://github.com/sstephenson/execjs#readme for more supported runtimes
  # gem 'therubyracer', :platforms => :ruby

  gem 'uglifier', '>= 1.0.3'
end
gem 'pg'
gem 'execjs'
gem 'therubyracer'
gem 'activerecord-postgis-adapter','0.4.3'
gem "railroady"
gem 'activerecord-import'
gem 'seed-fu', '~> 2.3'
gem 'rgeo'
gem 'slim-rails'
gem 'simple_form'
gem 'less-rails'
gem 'twitter-bootstrap-rails'
gem 'rb-readline'
gem 'foreigner'
gem 'squeel'
gem 'rgeo-geojson'
gem 'rgeo-activerecord'
gem 'twitter-bootswatch-rails'
gem 'twitter-bootswatch-rails-helpers'
gem "font-awesome-rails"


group :development, :test do
  gem 'pry-rails'  # rails console(もしくは、rails c)でirbの代わりにpryを使われる
  gem 'pry-doc'    # methodを表示
  #gem 'pry-debugger' # デバッグを実施
  gem 'pry-remote'
  gem 'pry-stack_explorer' # スタックをたどれる
end
###############################
bundle config build.pg --with-pg-config=/usr/pgsql-9.1/bin/pg_config
bundle install --path=~/gems/ce1/vendor/bundle --binstubs=bundle_bin
# Gemfile バックアップして
rails new .
#Gemfileをnewする前のものからコピー
bundle install --path=~/gems/ce1/vendor/bundle --binstubs=bundle_bin

#CE 下記を追記
gem 'community_engine', git: 'https://github.com/bborn/communityengine.git', branch: 'rails3.x'

# application_config.rb
configatron.community_name = "Your Application Name"

bundle install --path=~/gems/ce1/vendor/bundle --binstubs=bundle_bin
バージョンの競合があったので
budle update
bundle install --path=~/gems/ce1/vendor/bundle --binstubs=bundle_bin

# DEPRECATION WARNING: を消すために

environment.rb
Rakefile
に下記を追記
ActiveSupport::Deprecation.silenced = true
それから、development.rbでActiveSupport::Deprecationのログを有効にする。
#
rake community_engine:install:migrations
rake db:migrate

#index
Delete the default views/layouts/application.html.erb that Rails created for you. Delete public/index.html if you havenot already

#config/routes.rb
mount CommunityEngine::Engine => "/"

#



#
cp -a /home/vagrant/gems/ce1/vendor/bundle/ruby/2.0.0/bundler/gems/communityengine-bdaa809f9358/  /vagrant/rails_products/communityengine-bdaa809f9358/

##############
boxを書き出し
vagrant package --output CentOS65_for_dev_20160816.box





###
ファイル変更監視ツール
yum install inotify-tools
inotifywait -rd -o inotify-tool.log -s --format '%T %w%f %e' --timefmt '%F %T' /home/vagrant


(commmit)


